/**
  ******************************************************************************
  * @file    edp9IN7G.h
  * @author  Waveshare Team
  * @version V1.0.0
  * @date    29-Dec-2020
  * @brief   This file describes initialisation of 7.3f e-Papers
  *
  ******************************************************************************
  */

/*****************************************************************************
                      EPD_4IN01F
******************************************************************************/
#include <esp_task_wdt.h>
static void EPD_9IN7G_BusyHigh(void)// If BUSYN=0 then waiting
{
    while(!(digitalRead(PIN_SPI_BUSY)));
}

static void EPD_9IN7G_BusyLow(void)// If BUSYN=1 then waiting
{
    while(digitalRead(PIN_SPI_BUSY));
}

static void EPD_9IN7G_Show(void)
{
    Serial.println("EPD_9IN7G_Show Begin");

    Serial.println("Turn on display.");
    // turn on display
    EPD_SendCommand(0x04);//0x04
    EPD_9IN7G_BusyHigh();

    EPD_SendCommand(0x12);//0x12
    EPD_SendData(0x00);
    EPD_9IN7G_BusyHigh();

    EPD_SendCommand(0x02);//0x02
    EPD_SendData(0x00);
    EPD_9IN7G_BusyHigh();
    
	delay(200);
    Serial.print("EPD_9IN7G_Show END\r\n");

    // go to sleep
    delay(100);     
    EPD_SendCommand(0x07);//sleep
    EPD_SendData(0xA5);
    delay(100);
}

//四色常温波形

const unsigned char E5_WSF[]={																																											
0xEF,	0x7F,	0xBE,	0xBF,	0x6F,	0x6F,	0xEF,	0x7F,	0xEF,	0x7F,	0xBE,	0xBF,	0x6F,	0x6F,	0xEF,	0x7F,	0xEF,	0x7F,	0xBE,	0xBF,	0x6F,	0x6F,	0xEF,	0x7F,	0xEF,	0x7F,	0xBE,	0xBF,	0x6F,	0x6F,	0xEF,	0x7F,	0xEF,	0x7F,	0xBE,	0xBF,	0x6F,	0x6F,	0xEF,	0x7F,	0xEF,	0x7F,	0xBE,	0xBF,	0x6F,	0x6F,	0xEF,	0x7F,	
0x7F,	0x7F,	0x7F,	0x7F,	0x7F,	0x7F,	0x7F,	0x7F,	0xFF,	0xF3,	0xFB,	0xFF,	0xFF,	0xFF,	0xBF,	0xFF,	0xFF,	0xF3,	0xFB,	0xFF,	0xF9,	0xFB,	0xDD,	0xF7,	0xFF,	0xF3,	0xFB,	0xD7,	0xF3,	0xD7,	0xDF,	0xDF,	0xD5,	0xF3,	0xFB,	0xD7,	0xF7,	0xDF,	0x94,	0x9D,	0xFF,	0xFF,	0xFF,	0xBF,	0xBF,	0xBF,	0xBE,	0xBE,	
0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xFE,	0xF3,	0xD7,	0xF3,	0xFD,	0xFE,	0xBF,	0xFE,	0xBE,	0xF3,	0xD7,	0xF3,	0xFD,	0xDD,	0xFF,	0xDF,	0xFE,	0xF3,	0xDF,	0xD2,	0xFF,	0xFF,	0xFF,	0xFF,	0xFF,	0xF3,	0xDF,	0xD2,	0xD2,	0x90,	0x90,	0x90,	0xFF,	0xFF,	0xFF,	0xBA,	0xBA,	0xBA,	0xFB,	0xFB,	
0x78,	0x7F,	0x7F,	0xEF,	0xEF,	0xEF,	0xBD,	0xBD,	0xA5,	0x7F,	0x7F,	0x7F,	0xEF,	0xEF,	0xBF,	0xBF,	0xA5,	0x7F,	0x7F,	0x7F,	0xEF,	0xEF,	0x7F,	0x7F,	0xA5,	0x7F,	0x7F,	0x7F,	0xEF,	0xEF,	0x7F,	0xEF,	0xA5,	0x7F,	0x7F,	0x7F,	0xEF,	0xEF,	0x7F,	0xEF,	0x78,	0x7F,	0x7F,	0x7F,	0xEF,	0xEF,	0x7F,	0x7F,	
0xFF,	0x7F,	0xEF,	0x7F,	0xBF,	0x7F,	0xFF,	0xFF,	0x67,	0x7F,	0xEF,	0x7F,	0xBF,	0x7F,	0xAF,	0x6F,	0x67,	0x7F,	0xEF,	0x7F,	0xBF,	0x7F,	0x2F,	0x6F,	0x67,	0x7F,	0xEF,	0x7F,	0x6F,	0x7F,	0xFD,	0x2F,	0x67,	0x7F,	0xEF,	0x7F,	0x6F,	0x7F,	0x7F,	0xEF,	0xFF,	0x7F,	0xEF,	0x7F,	0xBF,	0x7F,	0xFD,	0xFD,	
0xFF,	0xFF,	0xFF,	0xEF,	0xEF,	0xEF,	0xFF,	0xFF,	0x2D,	0xFF,	0xFF,	0xEF,	0x7F,	0xEF,	0x6F,	0xAF,	0x6C,	0xFF,	0xFF,	0xEF,	0x6F,	0xEF,	0x6F,	0xAF,	0x7C,	0xFF,	0xFF,	0xEF,	0xEF,	0xEF,	0x3F,	0x7F,	0xBE,	0xFF,	0xFF,	0xEF,	0x7F,	0xEF,	0x3F,	0x7D,	0xFF,	0xFF,	0xFF,	0xEF,	0xEF,	0xEF,	0x7F,	0x7F,	
0xEF,	0xEC,	0xEF,	0xEF,	0xEF,	0xEF,	0xEF,	0xEF,	0xEF,	0xEC,	0xEF,	0xEF,	0xEF,	0xEF,	0xEF,	0xEF,	0xEF,	0xEC,	0xEF,	0xEF,	0xEF,	0xEF,	0xEF,	0xEF,	0xEF,	0xEC,	0xEF,	0xEF,	0xEF,	0xEF,	0xEF,	0xEF,	0xEF,	0xEC,	0xEF,	0xEF,	0xEF,	0xEF,	0xEF,	0xEF,	0xEF,	0xEC,	0xEF,	0xEF,	0xEF,	0xEF,	0xEF,	0xEF,	
0x78,	0x7D,	0x7F,	0xEF,	0x6D,	0xBF,	0xED,	0xED,	0xB7,	0x7D,	0x7F,	0xEF,	0x6F,	0x7D,	0xEF,	0x2F,	0xFC,	0x7D,	0x7F,	0xBF,	0xAF,	0xAF,	0x6F,	0x6F,	0xE7,	0x7D,	0x7F,	0x2F,	0x3F,	0xFD,	0x7F,	0x6F,	0xFC,	0x7D,	0x7F,	0xBF,	0xBF,	0xFF,	0xEF,	0xEF,	0x78,	0x7D,	0x7F,	0xEF,	0xAF,	0xBF,	0xED,	0xED,	
0xFF,	0x7D,	0xEF,	0x7E,	0x7D,	0xBD,	0xFF,	0xFF,	0xFE,	0x7D,	0xEF,	0x7D,	0xFE,	0x6F,	0x3F,	0x7F,	0x2E,	0x7D,	0xEF,	0x2F,	0xBD,	0x7D,	0x7F,	0x6F,	0x6E,	0x7D,	0xEF,	0x7F,	0xFE,	0x2F,	0x7F,	0xAF,	0x76,	0x7D,	0xEF,	0x7E,	0xFE,	0x6E,	0x2F,	0x3F,	0xFF,	0x7D,	0xEF,	0xEE,	0xFE,	0xBD,	0xFF,	0xFF,	
0xFF,	0xEF,	0xFF,	0xFD,	0x7F,	0xBF,	0xFF,	0xFF,	0xE7,	0xEF,	0xFF,	0x2D,	0x6F,	0x2F,	0x7F,	0xFF,	0x7C,	0xEF,	0xFF,	0x2D,	0xBF,	0xAF,	0xBF,	0xBF,	0x3E,	0xEF,	0xFF,	0xEE,	0x7F,	0xAF,	0x6F,	0x7F,	0x3F,	0xEF,	0xFF,	0xBF,	0x6F,	0xEF,	0x7F,	0x7F,	0xFF,	0xEF,	0xFF,	0xFD,	0x7F,	0xBF,	0xFF,	0xFF,	
0xEF,	0xEF,	0xEF,	0xEF,	0xEF,	0xEF,	0x7F,	0x7F,	0xEF,	0xEF,	0xEF,	0xEF,	0xEF,	0xEF,	0x7F,	0x7F,	0xEF,	0xEF,	0xEF,	0xEF,	0xEF,	0xEF,	0x7F,	0x7F,	0xEF,	0xEF,	0xEF,	0xEF,	0xEF,	0xEF,	0x7F,	0x7F,	0xEF,	0xEF,	0xEF,	0xEF,	0xEF,	0xEF,	0x7F,	0x7F,	0xEF,	0xEF,	0xEF,	0xEF,	0xEF,	0xEF,	0x7F,	0x7F,	
0x00,	0x28,	0x78,	0x2C,	0x26,	0x14,	0x02,																																																						

};

/**********切换代码*************/

#define Hanshow     100
#define Qingyue     101


int EPD_9IN7G_init() 
{
    Serial.print("EPD_9IN7G_init Begin\r\n");
    EPD_Reset();
    EPD_9IN7G_BusyHigh();

    EPD_SendCommand(0x00);    // PSR
    // EPD_SendData(0x57);
    EPD_SendData(0x5F);
    EPD_SendData(0xA9);
    EPD_9IN7G_BusyHigh();

    EPD_SendCommand(0x06);
    EPD_SendData(0x0F);
    EPD_SendData(0x8B);
    EPD_SendData(0x93);
    // EPD_SendData(0xA1); // 65mA
    EPD_SendData(0xC1); // 100mA

    EPD_SendCommand(0x50);
    EPD_SendData(0x37);

    EPD_SendCommand(0x61);  // TRES
    EPD_SendData(0x03);
    EPD_SendData(0xC0); // Source Line 960
    EPD_SendData(0x02);
    EPD_SendData(0xA0); // Gate Line 672
    EPD_9IN7G_BusyHigh();

    EPD_SendCommand(0x62);
    EPD_SendData(0x77);
    EPD_SendData(0x77);
    EPD_SendData(0x77);
    EPD_SendData(0x5C);
    EPD_SendData(0x9F);
    EPD_SendData(0x8C);
    EPD_SendData(0x77);
    EPD_SendData(0x63);

    EPD_SendCommand(0xE7);
    EPD_SendData(0x16);

    EPD_SendCommand(0xE9);
    EPD_SendData(0x01);

    EPD_SendCommand(0x01);
    EPD_SendData(0x07);

    int mode = Qingyue;

    if (mode == Qingyue) {
        EPD_SendData(E5_WSF[528]);  // +-20V  VSPL 00
        EPD_SendData(E5_WSF[529]);  // 绾㈢數鍘嬮粦鑹茬數鍘?
        EPD_SendData(E5_WSF[531]);  // 78 榛戣壊鐢靛帇 VSP
        EPD_SendData(E5_WSF[530]);  // SN鐢靛帇锛孭ower灏忚礋鍘嬶紝鐧借壊
        EPD_SendData(E5_WSF[532]);  // 绾㈣壊Power鐢靛帇
    } else if (mode == Hanshow) {
        EPD_SendData(E5_WSF[0]);  // +-20V  VSPL 00
        EPD_SendData(E5_WSF[1]);  // 绾㈢數鍘嬮粦鑹茬數鍘?
        EPD_SendData(E5_WSF[3]);  // 78 榛戣壊鐢靛帇 VSP
        EPD_SendData(E5_WSF[2]);  // SN鐢靛帇锛孭ower灏忚礋鍘嬶紝鐧借壊
        EPD_SendData(E5_WSF[4]);  // 绾㈣壊Power鐢靛帇
    }


    EPD_SendCommand(0x82);  // VCOM
    if(mode == Qingyue) {
		EPD_SendData(E5_WSF[533] + 0x80);
	} else if(mode == Hanshow) {
		EPD_SendData(E5_WSF[5] + 0x80);
	}    

    EPD_SendCommand(0x30);     // 棰戠巼
    if(mode == Qingyue) {
		EPD_SendData(E5_WSF[534]);
	} else if(mode == Hanshow) {
		EPD_SendData(E5_WSF[6]);
	}

    // 浼犺緭娉㈠舰
    int i,j;
    EPD_SendCommand(0x20);
    if(mode == Qingyue) {
        for (i = 528; i < 535; i++) {
            EPD_SendData(E5_WSF[i]);
        }

        for (i = 0; i < 48; i++) {
            for (j = 0; j < 11; j++) {
                EPD_SendData(E5_WSF[i + 48 * j]);
            }
        }
	} else if(mode == Hanshow) {
		for (i = 0; i < 535; i++) {
            EPD_SendData(E5_WSF[i]);
        }
	}

    // new add
    EPD_SendCommand(0x10); //begin write data to e-Paper

    Serial.print("EPD_9IN7G_init End\r\n");
	
    return 0;
}
